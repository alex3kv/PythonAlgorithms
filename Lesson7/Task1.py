'''
Отсортируйте по убыванию методом пузырька одномерный целочисленный массив, заданный случайными числами на промежутке [-100; 100). Выведите на экран исходный и отсортированный массивы.

Примечания:
a. алгоритм сортировки должен быть в виде функции, которая принимает на вход массив данных,
b. постарайтесь сделать алгоритм умнее, но помните, что у вас должна остаться сортировка пузырьком.

Улучшенные версии сортировки, например, расчёской, шейкерная и другие в зачёт не идут.
'''
import random

# генерируем массив для отладки
#arr = [_ for _ in range(10)]
#random.shuffle(arr)

# генерируем массив случайных целых чисел
arr = [random.randint(-100, 100) for _ in range(random.randint(10, 20))]

print(arr)

def bubble_sort(array):
    
    for j in range(len(array), 1, -1):
        
        is_changed = False

        for i in range(1, j):

            if array[i - 1] < array[i]:
                array[i - 1], array[i] = array[i], array[i - 1]
                is_changed |= True
        
        # если после выхода из внутреннего массива изменений не было, значит массив уже отсортирован, нет необходимости идти на следующую итерацию
        if not is_changed:
            break

        #print(array)        


bubble_sort(arr)
print(arr)
